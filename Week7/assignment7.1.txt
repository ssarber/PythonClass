# John Guttag, Eric Grimson, 6.00 Introduction to Computer Science
# Massachusetts Institute of Technology: MIT OpenCouseWare),
# http://ocw.mit.edu (Accessed [Date]). 
# License: Creative Commons BY-NC-SA
#

import math, random, pylab

class Location(object):
    def __init__(self, x, y):
        self.x = float(x)
        self.y = float(y)
    def move(self, xc, yc):
        return Location(self.x+float(xc), self.y+float(yc))
    def getCoords(self):
        return self.x, self.y
    def getDist(self, other):
        ox, oy = other.getCoords()
        xDist = self.x - ox
        yDist = self.y - oy
        return math.sqrt(xDist**2 + yDist**2)

class CompassPt(object):
    possibles = ('N', 'S', 'E', 'W')
    def __init__(self, pt):
        if pt in self.possibles: self.pt = pt
        else: raise ValueError('in CompassPt.__init__')
    def move(self, dist):
        if self.pt == 'N': return (0, dist)
        elif self.pt == 'S': return (0, -dist)
        elif self.pt == 'E': return (dist, 0)
        elif self.pt == 'W': return (-dist, 0)
        else: raise ValueError('in CompassPt.move')

class Field(object):
    def __init__(self, drunk, loc):
        self.drunk = drunk
        self.loc = loc
    def move(self, cp, dist):
        oldLoc = self.loc
        xc, yc = cp.move(dist)
        self.loc = oldLoc.move(xc, yc)
    def getLoc(self):
        return self.loc
    def getDrunk(self):
        return self.drunk
class Drunk(object):
    def __init__(self, name):
        self.name = name
    def move(self, field, time = 1):
        if field.getDrunk() != self:
            raise ValueError('Drunk.move called with drunk not in field')
        for i in range(time):
            pt = CompassPt(random.choice(CompassPt.possibles))
            field.move(pt, 1)

# TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO TODO
def performTrial(time, f):
    start = f.getLoc()
    xcoords = []
    ycoords = []
    for t in range(1, time + 1):
        # TODO
        f.getDrunk().move(f) 
        newLoc = f.getLoc() 
        current_coords = newLoc.getCoords()        
        xcoords.append( current_coords[0] )
        ycoords.append( current_coords[1] )
    return xcoords,ycoords
# END OF TODOEND OF TODO END OF TODO END OF TODO END OF TODO

drunk = Drunk('Homer Simpson')
for i in range(1):
    f = Field(drunk, Location(0, 0))
    coords = performTrial(500, f)
    pylab.plot(coords[0],coords[1],marker='^',linestyle=':',color='r')
pylab.title('Homer\'s Random Walk')
pylab.xlabel('Time')
pylab.ylabel('Distance from Origin')
pylab.show()